{
 "Resources": {
  "ConvertToZarrE5684073": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr/Resource"
   }
  },
  "ConvertToZarrPolicy9B5D0DE1": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ConvertToZarrE5684073"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConvertToZarrE5684073",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConvertToZarrE5684073",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr/Policy/Resource"
   }
  },
  "ConvertToZarrVpc2A194643": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/Resource"
   }
  },
  "ConvertToZarrVpcPublicSubnet1Subnet6524DDBA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1/Subnet"
   }
  },
  "ConvertToZarrVpcPublicSubnet1RouteTable2AF48BCE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1/RouteTable"
   }
  },
  "ConvertToZarrVpcPublicSubnet1RouteTableAssociationD3FAD5F1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ConvertToZarrVpcPublicSubnet1RouteTable2AF48BCE"
    },
    "SubnetId": {
     "Ref": "ConvertToZarrVpcPublicSubnet1Subnet6524DDBA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "ConvertToZarrVpcPublicSubnet1DefaultRouteE34ECDD1": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "ConvertToZarrVpcIGW0ED156D3"
    },
    "RouteTableId": {
     "Ref": "ConvertToZarrVpcPublicSubnet1RouteTable2AF48BCE"
    }
   },
   "DependsOn": [
    "ConvertToZarrVpcVPCGW144D4A5A"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "ConvertToZarrVpcPublicSubnet1EIPA38B3C0A": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1/EIP"
   }
  },
  "ConvertToZarrVpcPublicSubnet1NATGateway0C6BA91E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "ConvertToZarrVpcPublicSubnet1EIPA38B3C0A",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "ConvertToZarrVpcPublicSubnet1Subnet6524DDBA"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "ConvertToZarrVpcPublicSubnet1DefaultRouteE34ECDD1",
    "ConvertToZarrVpcPublicSubnet1RouteTableAssociationD3FAD5F1"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PublicSubnet1/NATGateway"
   }
  },
  "ConvertToZarrVpcPrivateSubnet1Subnet3A53AFB9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PrivateSubnet1/Subnet"
   }
  },
  "ConvertToZarrVpcPrivateSubnet1RouteTableF282BA11": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "ConvertToZarrVpcPrivateSubnet1RouteTableAssociation3363AB75": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "ConvertToZarrVpcPrivateSubnet1RouteTableF282BA11"
    },
    "SubnetId": {
     "Ref": "ConvertToZarrVpcPrivateSubnet1Subnet3A53AFB9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "ConvertToZarrVpcPrivateSubnet1DefaultRouteF85B435F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "ConvertToZarrVpcPublicSubnet1NATGateway0C6BA91E"
    },
    "RouteTableId": {
     "Ref": "ConvertToZarrVpcPrivateSubnet1RouteTableF282BA11"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "ConvertToZarrVpcIGW0ED156D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/IGW"
   }
  },
  "ConvertToZarrVpcVPCGW144D4A5A": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "ConvertToZarrVpcIGW0ED156D3"
    },
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/VPCGW"
   }
  },
  "ConvertToZarrVpcs3A880C871": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "ConvertToZarrVpcPrivateSubnet1RouteTableF282BA11"
     },
     {
      "Ref": "ConvertToZarrVpcPublicSubnet1RouteTable2AF48BCE"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ConvertToZarrStack/Convert-To-Zarr-Vpc"
     }
    ],
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Convert-To-Zarr-Vpc/s3/Resource"
   }
  },
  "DaskSchedulerlogs0A63A208": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "Scheduler-logs",
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Dask-Scheduler-logs/Resource"
   }
  },
  "DaskWorkerlogsEC6CC8F7": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "Worker-logs",
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Dask-Worker-logs/Resource"
   }
  },
  "ECSExecutionRoleA044C6CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/ECSExecutionRole/Resource"
   }
  },
  "ECSExecutionRoleDefaultPolicy91A8E3CE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DaskSchedulerlogs0A63A208",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "DaskWorkerlogsEC6CC8F7",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ECSExecutionRoleDefaultPolicy91A8E3CE",
    "Roles": [
     {
      "Ref": "ECSExecutionRoleA044C6CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/ECSExecutionRole/DefaultPolicy/Resource"
   }
  },
  "ECSExecutionPolicy30B4C38F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DaskSchedulerlogs0A63A208",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "DaskWorkerlogsEC6CC8F7",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:PutObjectAcl"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConvertToZarrE5684073",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConvertToZarrE5684073",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ECSExecutionPolicy",
    "Roles": [
     {
      "Ref": "ECSExecutionRoleA044C6CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/ECSExecutionPolicy/Resource"
   }
  },
  "DaskCluster6CDB49A7": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "Dask-Cluster",
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "enabled"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Dask-Cluster/Resource"
   }
  },
  "DaskClusterDefaultServiceDiscoveryNamespaceD171BDDE": {
   "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
   "Properties": {
    "Name": "local-dask",
    "Vpc": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/Dask-Cluster/DefaultServiceDiscoveryNamespace/Resource"
   }
  },
  "taskDefinitionScheduler2F1AF045": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "dask",
       "scheduler"
      ],
      "Cpu": 8192,
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:e541a1ba4131c13d43a1a398dbf93db119056123396669097f587a581434086c"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "DaskSchedulerlogs0A63A208"
        },
        "awslogs-stream-prefix": "ecs",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Memory": 16384,
      "MemoryReservation": 16384,
      "Name": "DaskSchedulerImage"
     }
    ],
    "Cpu": "8192",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ECSExecutionRoleA044C6CA",
      "Arn"
     ]
    },
    "Family": "Dask-Scheduler",
    "Memory": "16384",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ECSExecutionRoleA044C6CA",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/taskDefinitionScheduler/Resource"
   }
  },
  "taskDefinitionWorkerA921838E": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "dask",
       "worker",
       "dask-scheduler.local-dask:8786",
       "--worker-port",
       "9000",
       "--nanny-port",
       "9001"
      ],
      "Cpu": 8192,
      "Essential": true,
      "Image": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:e541a1ba4131c13d43a1a398dbf93db119056123396669097f587a581434086c"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "DaskWorkerlogsEC6CC8F7"
        },
        "awslogs-stream-prefix": "ecs",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Memory": 16384,
      "MemoryReservation": 16384,
      "Name": "DaskWorkerImage"
     }
    ],
    "Cpu": "8192",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ECSExecutionRoleA044C6CA",
      "Arn"
     ]
    },
    "Family": "Dask-Worker",
    "Memory": "16384",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ECSExecutionRoleA044C6CA",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/taskDefinitionWorker/Resource"
   }
  },
  "DaskSecurityGroupEA9BF04B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Enable Scheduler ports access",
    "GroupName": "DaskSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "10.0.0.0/17",
      "Description": "Inbound dask from public subnet",
      "FromPort": 8786,
      "IpProtocol": "tcp",
      "ToPort": 8789
     }
    ],
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/DaskSecurityGroup/Resource"
   }
  },
  "DaskSecurityGroupfromConvertToZarrStackDaskSecurityGroup4E967100ALLPORTSFAA299DE": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Inbound from within the SG",
    "FromPort": 0,
    "GroupId": {
     "Fn::GetAtt": [
      "DaskSecurityGroupEA9BF04B",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "DaskSecurityGroupEA9BF04B",
      "GroupId"
     ]
    },
    "ToPort": 65535
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/DaskSecurityGroup/from ConvertToZarrStackDaskSecurityGroup4E967100:ALL PORTS"
   }
  },
  "DaskSchedulerService10C4F4A8": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "DaskCluster6CDB49A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 100
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "DaskSecurityGroupEA9BF04B",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "ConvertToZarrVpcPrivateSubnet1Subnet3A53AFB9"
       }
      ]
     }
    },
    "ServiceName": "Dask-Scheduler",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "DaskSchedulerServiceCloudmapServiceE4FACA55",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "taskDefinitionScheduler2F1AF045"
    }
   },
   "DependsOn": [
    "ECSExecutionRoleDefaultPolicy91A8E3CE",
    "ECSExecutionRoleA044C6CA"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/DaskSchedulerService/Service"
   }
  },
  "DaskSchedulerServiceCloudmapServiceE4FACA55": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "DaskClusterDefaultServiceDiscoveryNamespaceD171BDDE",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 10
    },
    "Name": "Dask-Scheduler",
    "NamespaceId": {
     "Fn::GetAtt": [
      "DaskClusterDefaultServiceDiscoveryNamespaceD171BDDE",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "ECSExecutionRoleDefaultPolicy91A8E3CE",
    "ECSExecutionRoleA044C6CA"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/DaskSchedulerService/CloudmapService/Resource"
   }
  },
  "DaskWorkerService14F1D300": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "DaskCluster6CDB49A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 100
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "LaunchType": "FARGATE",
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "DaskSecurityGroupEA9BF04B",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "ConvertToZarrVpcPrivateSubnet1Subnet3A53AFB9"
       }
      ]
     }
    },
    "ServiceName": "Dask-Worker",
    "ServiceRegistries": [
     {
      "RegistryArn": {
       "Fn::GetAtt": [
        "DaskWorkerServiceCloudmapServiceD8D70A13",
        "Arn"
       ]
      }
     }
    ],
    "TaskDefinition": {
     "Ref": "taskDefinitionWorkerA921838E"
    }
   },
   "DependsOn": [
    "ECSExecutionRoleDefaultPolicy91A8E3CE",
    "ECSExecutionRoleA044C6CA"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/DaskWorkerService/Service"
   }
  },
  "DaskWorkerServiceCloudmapServiceD8D70A13": {
   "Type": "AWS::ServiceDiscovery::Service",
   "Properties": {
    "DnsConfig": {
     "DnsRecords": [
      {
       "TTL": 60,
       "Type": "A"
      }
     ],
     "NamespaceId": {
      "Fn::GetAtt": [
       "DaskClusterDefaultServiceDiscoveryNamespaceD171BDDE",
       "Id"
      ]
     },
     "RoutingPolicy": "MULTIVALUE"
    },
    "HealthCheckCustomConfig": {
     "FailureThreshold": 10
    },
    "Name": "Dask-Worker",
    "NamespaceId": {
     "Fn::GetAtt": [
      "DaskClusterDefaultServiceDiscoveryNamespaceD171BDDE",
      "Id"
     ]
    }
   },
   "DependsOn": [
    "ECSExecutionRoleDefaultPolicy91A8E3CE",
    "ECSExecutionRoleA044C6CA"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/DaskWorkerService/CloudmapService/Resource"
   }
  },
  "producerServiceRole19B1D3C5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/producer/ServiceRole/Resource"
   }
  },
  "producerD5545B1E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "01fa74a12af03587c148509dd83f6c2f591b251cdded2238fba9598c7878835e.zip"
    },
    "Handler": "lambda_producer.producer",
    "Role": {
     "Fn::GetAtt": [
      "producerServiceRole19B1D3C5",
      "Arn"
     ]
    },
    "Runtime": "python3.13"
   },
   "DependsOn": [
    "producerServiceRole19B1D3C5"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/producer/Resource",
    "aws:asset:path": "asset.01fa74a12af03587c148509dd83f6c2f591b251cdded2238fba9598c7878835e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "consumerServiceRoleA19DC496": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/consumer/ServiceRole/Resource"
   }
  },
  "consumer4CA80CB0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "01fa74a12af03587c148509dd83f6c2f591b251cdded2238fba9598c7878835e.zip"
    },
    "Handler": "lambda_consumer.consumer",
    "Role": {
     "Fn::GetAtt": [
      "consumerServiceRoleA19DC496",
      "Arn"
     ]
    },
    "Runtime": "python3.13"
   },
   "DependsOn": [
    "consumerServiceRoleA19DC496"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/consumer/Resource",
    "aws:asset:path": "asset.01fa74a12af03587c148509dd83f6c2f591b251cdded2238fba9598c7878835e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "daskdashboardnlbC90DF7C6": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "Subnets": [
     {
      "Ref": "ConvertToZarrVpcPublicSubnet1Subnet6524DDBA"
     }
    ],
    "Type": "network"
   },
   "DependsOn": [
    "ConvertToZarrVpcPublicSubnet1DefaultRouteE34ECDD1",
    "ConvertToZarrVpcPublicSubnet1RouteTableAssociationD3FAD5F1"
   ],
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/dask-dashboard-nlb/Resource"
   }
  },
  "daskdashboardnlblistener62C8DD28": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "daskschedulertg3C18B4EA"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "daskdashboardnlbC90DF7C6"
    },
    "Port": 80,
    "Protocol": "TCP"
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/dask-dashboard-nlb/listener/Resource"
   }
  },
  "daskschedulertg3C18B4EA": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 8787,
    "Protocol": "TCP",
    "TargetType": "ip",
    "VpcId": {
     "Ref": "ConvertToZarrVpc2A194643"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/dask-scheduler-tg/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31R0W6jQAz8lr5v9i6JdPfcJG0VqYoQifJamcWlPmAXrU0ihPj302Yh9E5VnzwzHrxmvNLL37/0zwe48sLk5aKiTPdHAVMquPJbz2vdb1pToqjtux1RLImryHSzPPJINsA4KDQr3Z8bE0znZKuSNqvIHNvMxnkzSl0reIKswlmftUdmZwiEnL2bA3jaJ6EcQF5A8AqdSjxdQHAevLeC3uLdEDcZ2aMImI8arahROTfmyeaNIyuj9U6PaFpP0r141za3Lb8V9rbwyBxC8G/AjMJ650yJfl9DEX4JJfR0io1jEue7EJqqXMG6f3XFfeyEB0VQ6z51MaRbnY8QUXiOdb+tWhb0QZ/gCbjc4TtZmmL8X3FWgCz6T9oz+CLEif5CJp4mwkFxBDmxcRf0ne7H7HeWD1AjNxC/+Er+amAFdZaD7p9ba6YVJzwoXk8hjslVwEKmcpBnUIE1ZIvLSvcHlKvz5auDfHPTYwr/8MlDLGjH/oTH3gl8gXI/wSc6DCpFdq03qG6rHAUKssXtJFMj5O5sTnH3pJMPZ3+s9XKtlw9/mGjhWytUo05j/Qs3/+5fhwMAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ConvertToZarrStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}